# Production-ready Multi-stage Dockerfile for Google Cloud Run
# ----------------------------------------------------------------

# Stage 1: Build environment with cargo-chef
FROM --platform=linux/amd64 rust:1.89-bookworm AS builder

# Install build dependencies and cargo-chef
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    clang \
    libclang-dev \
    && rm -rf /var/lib/apt/lists/* \
    && cargo install cargo-chef
WORKDIR /usr/src/app

# --- Dependency Caching with cargo-chef ---

# 1. Prepare the build recipe. 
# Bağımlılıkları etkileyen TÜM dosyaları bu adımda kopyala.
# SQLx, sorguları bulmak için 'src' ve önbelleği bulmak için '.sqlx' klasörüne ihtiyaç duyar.
COPY Cargo.toml Cargo.lock ./
COPY src ./src
COPY .sqlx ./.sqlx
COPY migrations ./migrations
# Varsa build.rs'i de ekle
COPY build.rs ./build.rs
RUN cargo chef prepare --recipe-path recipe.json

# 2. Cook (build) the dependencies. Bu katman, bağımlılıklar değişmediği sürece cache'lenir.
RUN cargo chef cook --release --recipe-path recipe.json

# --- Actual Build ---

# 3. Kodu tekrar kopyalamaya gerek yok, zaten hepsi burada.
# Sadece kendi projemizi, önceden derlenmiş bağımlılıkları kullanarak derle.
# Bu adım, sadece kendi kodun değiştiğinde çok hızlı çalışacaktır.
RUN cargo build --release --bin todo_api --bin migrate

# ----------------------------------------------------------------
# Stage 2: Minimal runtime image
FROM debian:bookworm-slim AS production

# Create non-root user for security
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Install runtime dependencies
RUN apt-get update && apt-get install -y ca-certificates && rm -rf /var/lib/apt/lists/*

# Copy the built binaries from the builder stage
COPY --from=builder /usr/src/app/target/release/todo_api /usr/local/bin/
COPY --from=builder /usr/src/app/target/release/migrate /usr/local/bin/

# Change ownership to non-root user
RUN chown appuser:appuser /usr/local/bin/todo_api && \
    chown appuser:appuser /usr/local/bin/migrate

# Switch to non-root user
USER appuser

ENV RUST_LOG=info
EXPOSE 8080
CMD ["todo_api"]