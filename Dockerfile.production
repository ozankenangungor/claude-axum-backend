# Production-ready Multi-stage Dockerfile for Google Cloud Run
# ----------------------------------------------------------------

# Stage 1: Build environment with cargo-chef
# Using "bookworm" for a more secure and up-to-date base OS
FROM --platform=linux/amd64 rust:1.89-bookworm AS builder

# Install build dependencies and cargo-chef in one layer
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    clang \
    libclang-dev \
    && rm -rf /var/lib/apt/lists/* \
    && cargo install cargo-chef
WORKDIR /usr/src/app

# --- Dependency Caching with cargo-chef ---

# 1. Prepare the build recipe. Sadece bağımlılıkları hesaplamak için gereken dosyaları kopyala.
COPY Cargo.toml Cargo.lock ./
RUN cargo chef prepare --recipe-path recipe.json

# 2. Cook (build) the dependencies. Bu katman, bağımlılıklar değişmediği sürece cache'lenecek.
RUN cargo chef cook --release --recipe-path recipe.json

# --- Actual Build ---

# 3. Şimdi asıl kaynak kodunu kopyala ve sadece kendi kodunu derle.
# Bağımlılıklar zaten cache'de olduğu için bu adım çok hızlı olacak.
COPY src ./src
COPY migrations ./migrations
COPY .sqlx ./.sqlx
# Varsa diğer kod dosyaları (örn: build.rs)
COPY build.rs ./build.rs
RUN cargo build --release --bin todo_api --bin migrate

# ----------------------------------------------------------------
# Stage 2: Minimal runtime image
# Using "bookworm-slim" for consistency and security
FROM debian:bookworm-slim AS production

# Create non-root user for security
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Install runtime dependencies
RUN apt-get update && apt-get install -y ca-certificates && rm -rf /var/lib/apt/lists/*

# Copy the built binaries from the builder stage
COPY --from=builder /usr/src/app/target/release/todo_api /usr/local/bin/
COPY --from=builder /usr/src/app/target/release/migrate /usr/local/bin/

# Change ownership to non-root user
RUN chown appuser:appuser /usr/local/bin/todo_api && \
    chown appuser:appuser /usr/local/bin/migrate

# Switch to non-root user
USER appuser

# Set default environment variables
ENV RUST_LOG=info

# Expose port (Cloud Run will set the PORT)
EXPOSE 8080

# Run the application
CMD ["todo_api"]